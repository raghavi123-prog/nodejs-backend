name: Build, Deploy Node.js App & Static HTML

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install dependencies for Node.js
      - name: Install dependencies
        run: npm install

      # Step 4: Run tests for Node.js
      - name: Run tests
        run: npm test || echo "No tests defined."

      # Step 5: Build Docker image for Node.js
      - name: Build Docker image
        run: docker build -t raghavi123/nodejs-backend-app .

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push raghavi123/nodejs-backend-app

      # Step 8: Set up SSH for Node.js deployment
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 9: Deploy Node.js App to EC2 server
      - name: Deploy to EC2 server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull raghavi123/nodejs-backend-app
          docker stop nodejs-backend-app || true
          docker rm nodejs-backend-app || true
          docker run -d --name nodejs-backend-app -p 3000:3000 raghavi123/nodejs-backend-app
          EOF

      # Step 10: Set up AWS CLI for Static HTML deployment
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Make sure your S3 bucket region matches this

      # Step 11: Sync static HTML file to S3
      - name: Sync static files to S3
        run: |
          echo "Uploading index.html to S3..."
          aws s3 cp ./index.html s3://kops-rag-storage-2/index.html
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
